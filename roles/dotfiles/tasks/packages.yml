- name: update pacman cache
  become: yes
  community.general.pacman:
    update_cache: yes
  when: ansible_os_family == "Archlinux"

- name: update apt cache
  become: yes
  ansible.builtin.apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: install cli packages
  become: yes
  ansible.builtin.package:
    name:
      - base-devel
      - git
      - tig
      - man-db
      - vim
      - htop
      - iotop
      - powertop
      - tree
      - ncdu
      - unzip
      - lnav
      - multitail
      - mlocate
      - wget
      - nodejs
      - npm
      - neofetch
      - liblphobos # required by onedrive-abraunegg
      - ldc # required by onedrive-abraunegg
      - openvpn
    state: latest

- name: create the `aur_builder` user
  become: yes
  ansible.builtin.user:
    name: aur_builder
    create_home: yes
    group: wheel
  when: ansible_os_family == "Archlinux"

- name: allow the `aur_builder` user to run `sudo pacman` without a password
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
    create: yes
    validate: "visudo -cf %s"
  when: ansible_os_family == "Archlinux"

- name: install aur packages
  kewlfft.aur.aur:
    name:
      - yay
      - google-chrome # Chromium doesn't support Google sync, so I use Google Chrome.
      - chrome-gnome-shell
      - visual-studio-code-bin
      - onedrive-abraunegg
    state: present
  become: yes
  become_user: aur_builder
  when: ansible_os_family == "Archlinux"

- name: install native apps
  become: yes
  ansible.builtin.package:
    name:
      - gimp
      - inkscape
      - vlc # vlc from flatpak has some problems
      - firefox
      - uget
      - meld
      - dconf-editor
    state: latest

- name: install flatpak apps
  community.general.flatpak:
    name:
      - com.mattermost.Desktop
      - com.transmissionbt.Transmission
      - fr.handbrake.ghb
      - org.keepassxc.KeePassXC
      - org.telegram.desktop
      - io.dbeaver.DBeaverCommunity
    state: present

- name: backup current pacman mirrorlist
  become: yes
  ansible.builtin.copy:
    src: /etc/pacman.d/mirrorlist
    dest: /etc/pacman.d/mirrorlist.backup
    force: no
  when: ansible_os_family == "Archlinux"

- name: install reflector (pacman mirrorlist auto-updater)
  become: yes
  community.general.pacman:
    name: reflector
    state: latest
  when: ansible_os_family == "Archlinux"
  notify:
    - enable and restart reflector service

- name: configure pacman
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ pacman_config }}"
  when: ansible_os_family == "Archlinux"

- meta: flush_handlers
